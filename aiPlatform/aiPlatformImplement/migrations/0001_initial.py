# Generated by Django 4.2.11 on 2024-08-14 12:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ai',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('owner', models.CharField(max_length=255)),
                ('brief', models.TextField()),
                ('time', models.DateField(auto_now=True)),
                ('marks', models.FloatField(default=0)),
                ('level', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='aiEngine',
            fields=[
                ('id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('name', models.CharField(default='默认对话Ai引擎', max_length=32)),
                ('subname', models.CharField(default='默认提供,免费使用的轻量Ai引擎', max_length=88)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.CharField(help_text='Enter a user ID that is 6-32 characters long and contains only letters and numbers.', max_length=32, unique=True, validators=[django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(32), django.core.validators.RegexValidator(code='invalid_user_id', message='user_id must be an alphanumeric string.', regex='^[a-zA-Z0-9]+$')])),
                ('user_password', models.CharField(max_length=255)),
                ('user_nikeName', models.CharField(default='默认昵称', max_length=255)),
                ('user_Credits', models.FloatField(default=5)),
                ('avaterindex', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='talk',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('follow', models.IntegerField()),
                ('username', models.CharField(max_length=255)),
                ('follownum', models.IntegerField()),
                ('text', models.TextField()),
                ('time', models.DateField(auto_now=True)),
                ('greatNum', models.IntegerField()),
                ('followflag', models.IntegerField(default=0)),
                ('level', models.IntegerField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='promptAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payed', models.BooleanField(default=False)),
                ('aiPrompt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.ai')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='prompt',
            fields=[
                ('pid', models.IntegerField(default=1, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('intro', models.CharField(max_length=2000)),
                ('text', models.TextField()),
                ('flexibility', models.FloatField(default=0)),
                ('randomness', models.FloatField(default=0)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('product_id', models.CharField(max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='pending', max_length=10)),
                ('transaction_time', models.DateTimeField(auto_now_add=True)),
                ('return_url', models.CharField(max_length=1000, null=True)),
                ('operation', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='ModelAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timesLeft', models.IntegerField(default=0)),
                ('payed', models.BooleanField(default=False)),
                ('engine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.aiengine')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='great',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('talk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.talk')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='favorite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateField(auto_now=True)),
                ('ai', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.ai')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='creditHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credits', models.IntegerField(default=5, null=True)),
                ('descriptionText', models.TextField(default='变化', max_length=80)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='creditBuyHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credits', models.IntegerField(default=5, null=True)),
                ('payed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='chatHistoryIndex',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('createTime', models.DateTimeField(auto_now_add=True)),
                ('engineID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.aiengine')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='chatHistoryContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.BooleanField(default=False)),
                ('chatContent', models.TextField()),
                ('messageID', models.IntegerField(default=0)),
                ('indexID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.chathistoryindex')),
            ],
        ),
        migrations.AddField(
            model_name='ai',
            name='prompt',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.prompt'),
        ),
        migrations.AddField(
            model_name='ai',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount'),
        ),
        migrations.CreateModel(
            name='rating',
            fields=[
                ('rid', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.PositiveIntegerField(default=0)),
                ('aif', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.ai')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiPlatformImplement.useraccount')),
            ],
            options={
                'unique_together': {('user', 'aif')},
            },
        ),
        migrations.AddConstraint(
            model_name='chathistorycontent',
            constraint=models.UniqueConstraint(fields=('indexID', 'messageID'), name='unique_indexID_messageID'),
        ),
    ]
